{"version":3,"file":"static/js/392.e13682f5.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/base-solana-adapter/src/baseSolanaAdapter.ts","../node_modules/@web3auth/base-solana-adapter/node_modules/base-x/src/index.js","../node_modules/@web3auth/base-solana-adapter/node_modules/bs58/index.js","../node_modules/@web3auth/phantom-adapter/src/utils.ts","../node_modules/@web3auth/phantom-adapter/src/phantomAdapter.ts"],"sourcesContent":["import {\n  ADAPTER_EVENTS,\n  ADAPTER_STATUS,\n  AdapterInitOptions,\n  BaseAdapter,\n  CHAIN_NAMESPACES,\n  checkIfTokenIsExpired,\n  clearToken,\n  getChainConfig,\n  getSavedToken,\n  saveToken,\n  signChallenge,\n  UserAuthInfo,\n  verifySignedChallenge,\n  WalletLoginError,\n} from \"@web3auth/base\";\nimport bs58 from \"bs58\";\n\nexport abstract class BaseSolanaAdapter<T> extends BaseAdapter<T> {\n  async init(_?: AdapterInitOptions): Promise<void> {\n    if (!this.chainConfig) this.chainConfig = getChainConfig(CHAIN_NAMESPACES.SOLANA, 1);\n  }\n\n  async authenticateUser(): Promise<UserAuthInfo> {\n    if (!this.provider || this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.notConnectedError();\n\n    const { chainNamespace, chainId } = this.chainConfig;\n\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      const existingToken = getSavedToken(accounts[0] as string, this.name);\n      if (existingToken) {\n        const isExpired = checkIfTokenIsExpired(existingToken);\n        if (!isExpired) {\n          return { idToken: existingToken };\n        }\n      }\n\n      const payload = {\n        domain: window.location.origin,\n        uri: window.location.href,\n        address: accounts[0],\n        chainId: parseInt(chainId, 16),\n        version: \"1\",\n        nonce: Math.random().toString(36).slice(2),\n        issuedAt: new Date().toISOString(),\n      };\n\n      const challenge = await signChallenge(payload, chainNamespace);\n      const encodedMessage = new TextEncoder().encode(challenge);\n      const signedMessage = await this.provider.request<Uint8Array>({\n        method: \"signMessage\",\n        params: {\n          message: encodedMessage,\n          display: \"utf8\",\n        },\n      });\n      const idToken = await verifySignedChallenge(\n        chainNamespace,\n        bs58.encode(signedMessage as Uint8Array),\n        challenge,\n        this.name,\n        this.sessionTime,\n        this.clientId,\n        this.web3AuthNetwork\n      );\n      saveToken(accounts[0] as string, this.name, idToken);\n      return {\n        idToken,\n      };\n    }\n    throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n  }\n\n  async disconnectSession(): Promise<void> {\n    super.checkDisconnectionRequirements();\n    const accounts = await this.provider.request<string[]>({\n      method: \"getAccounts\",\n    });\n    if (accounts && accounts.length > 0) {\n      clearToken(accounts[0], this.name);\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.rehydrated = false;\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","import type { IPhantomWalletProvider } from \"@web3auth/solana-provider\";\n\nexport function poll(callback: () => boolean | Promise<boolean>, interval: number, count: number): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    if (count > 0) {\n      setTimeout(async () => {\n        const done = await callback();\n        if (done) resolve(done);\n        if (!done)\n          poll(callback, interval, count - 1)\n            .then((res) => {\n              resolve(res);\n              return res;\n            })\n            .catch((err) => reject(err));\n      }, interval);\n    } else {\n      resolve(false);\n    }\n  });\n}\n\nexport const detectProvider = async (\n  options: { interval: number; count: number } = { interval: 1000, count: 3 }\n): Promise<IPhantomWalletProvider | null> => {\n  const isPhantomAvailable = typeof window !== \"undefined\" && !!(window as any).solana?.isPhantom;\n  if (isPhantomAvailable) {\n    return (window as any).solana;\n  }\n  const isAvailable = await poll(() => (window as any).solana?.isPhantom, options.interval, options.count);\n  if (isAvailable) return (window as any).solana;\n  return null;\n};\n","import {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterInitOptions,\n  AdapterNamespaceType,\n  BaseAdapterSettings,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseSolanaAdapter } from \"@web3auth/base-solana-adapter\";\nimport { IPhantomWalletProvider, PhantomInjectedProvider } from \"@web3auth/solana-provider\";\n\nimport { detectProvider } from \"./utils\";\nexport type PhantomAdapterOptions = BaseAdapterSettings;\n\nexport class PhantomAdapter extends BaseSolanaAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.PHANTOM;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.SOLANA;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.SOLANA;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public _wallet: IPhantomWalletProvider | null = null;\n\n  private phantomProvider: PhantomInjectedProvider | null = null;\n\n  get isWalletConnected(): boolean {\n    return !!(this._wallet?.isConnected && this.status === ADAPTER_STATUS.CONNECTED);\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.phantomProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(options: AdapterInitOptions = {}): Promise<void> {\n    await super.init(options);\n    super.checkInitializationRequirements();\n    this._wallet = await detectProvider({ interval: 500, count: 3 });\n    if (!this._wallet) throw WalletInitializationError.notInstalled();\n    this.phantomProvider = new PhantomInjectedProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig } });\n    this.status = ADAPTER_STATUS.READY;\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.PHANTOM);\n\n    try {\n      log.debug(\"initializing phantom adapter\");\n      if (options.autoConnect) {\n        this.rehydrated = true;\n        await this.connect();\n      }\n    } catch (error) {\n      log.error(\"Failed to connect with cached phantom provider\", error);\n      this.emit(\"ERRORED\", error);\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    try {\n      super.checkConnectionRequirements();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.PHANTOM });\n\n      if (!this._wallet) throw WalletInitializationError.notInstalled();\n      if (!this._wallet.isConnected) {\n        const handleDisconnect = this._wallet._handleDisconnect;\n        try {\n          await new Promise<SafeEventEmitterProvider | null>((resolve, reject) => {\n            const connect = async () => {\n              await this.connectWithProvider(this._wallet as IPhantomWalletProvider);\n              resolve(this.provider);\n            };\n            if (!this._wallet) {\n              reject(WalletInitializationError.notInstalled());\n              return;\n            }\n            this._wallet.once(\"connect\", connect);\n            // Raise an issue on phantom that if window is closed, disconnect event is not fired\n            (this._wallet as IPhantomWalletProvider)._handleDisconnect = (...args: unknown[]) => {\n              reject(WalletInitializationError.windowClosed());\n              return handleDisconnect.apply(this._wallet, args);\n            };\n\n            this._wallet.connect().catch((reason: unknown) => {\n              reject(reason);\n            });\n          });\n        } catch (error: unknown) {\n          if (error instanceof Web3AuthError) throw error;\n          throw WalletLoginError.connectionError((error as Error)?.message);\n        } finally {\n          this._wallet._handleDisconnect = handleDisconnect;\n        }\n      } else {\n        await this.connectWithProvider(this._wallet);\n      }\n\n      if (!this._wallet.publicKey) throw WalletLoginError.connectionError();\n      this._wallet.on(\"disconnect\", this._onDisconnect);\n\n      return this.provider;\n    } catch (error: unknown) {\n      // ready again to be connected\n      this.status = ADAPTER_STATUS.READY;\n      this.rehydrated = false;\n      this.emit(ADAPTER_EVENTS.ERRORED, error);\n      throw error;\n    }\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    await super.disconnectSession();\n    try {\n      await this._wallet?.disconnect();\n      if (options.cleanup) {\n        this.status = ADAPTER_STATUS.NOT_READY;\n        this.phantomProvider = null;\n        this._wallet = null;\n      }\n      await super.disconnect();\n    } catch (error: unknown) {\n      this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.disconnectionError((error as Error)?.message));\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.isWalletConnected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  private async connectWithProvider(injectedProvider: IPhantomWalletProvider): Promise<SafeEventEmitterProvider | null> {\n    if (!this.phantomProvider) throw WalletLoginError.connectionError(\"No phantom provider\");\n    await this.phantomProvider.setupProvider(injectedProvider);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.PHANTOM, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n    return this.provider;\n  }\n\n  private _onDisconnect = () => {\n    if (this._wallet) {\n      this._wallet.off(\"disconnect\", this._onDisconnect);\n      this.rehydrated = false;\n      // ready to be connected again only if it was previously connected and not cleaned up\n      this.status = this.status === ADAPTER_STATUS.CONNECTED ? ADAPTER_STATUS.READY : ADAPTER_STATUS.NOT_READY;\n      this.emit(ADAPTER_EVENTS.DISCONNECTED);\n    }\n  };\n}\n"],"names":["BaseSolanaAdapter","_inherits","_classCallCheck","_createClass","key","value","_","this","chainConfig","getChainConfig","CHAIN_NAMESPACES","_authenticateUser","provider","status","ADAPTER_STATUS","_context2","WalletLoginError","_this$chainConfig","chainNamespace","chainId","request","method","accounts","length","existingToken","getSavedToken","name","checkIfTokenIsExpired","idToken","payload","domain","window","location","origin","uri","href","address","parseInt","version","nonce","Math","random","toString","slice","issuedAt","Date","toISOString","signChallenge","challenge","encodedMessage","TextEncoder","encode","params","message","display","signedMessage","verifySignedChallenge","bs58","sessionTime","clientId","web3AuthNetwork","saveToken","_disconnectSession","_get","_context3","clearToken","_disconnect","rehydrated","emit","ADAPTER_EVENTS","BaseAdapter","_Buffer","require","module","exports","ALPHABET","TypeError","BASE_MAP","Uint8Array","j","i","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","log","iFACTOR","decodeUnsafe","source","alloc","psz","zeroes","size","b256","carry","it3","Error","it4","vch","allocUnsafe","fill","Array","isArray","from","isBuffer","pbegin","pend","b58","it1","it2","str","repeat","decode","string","buffer","basex","poll","callback","interval","count","Promise","resolve","reject","setTimeout","_asyncToGenerator","_context","done","then","res","catch","err","detectProvider","_ref2","_args2","options","solana","_window$solana","isPhantom","_window$solana2","PhantomAdapter","args","_this","_defineProperty","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","_wallet","off","_onDisconnect","get","_this$_wallet","isConnected","phantomProvider","_this$phantomProvider","set","_init","_args","WalletInitializationError","PhantomInjectedProvider","config","autoConnect","connect","_connect","adapter","handleDisconnect","_handleDisconnect","_ref","_this2","connectWithProvider","once","apply","reason","Web3AuthError","publicKey","on","_this$_wallet2","_args4","cleanup","_context4","disconnect","_getUserInfo","isWalletConnected","_context5","injectedProvider","_context6","setupProvider","reconnected"],"sourceRoot":""}